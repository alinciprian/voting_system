{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "proposalNames",
          "type": "string[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "chairman",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "countVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "delegateVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposalNames",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWinners",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "giveRightToVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "proposalName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "proposal",
          "type": "uint32"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerNames",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winningProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x81577f3c6c79ab9dd3a6d65a9794671842b8afc77aa12fd5878926ec4563431e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1644019",
    "logsBloom": "0x
    "blockHash": "0xfc5b87c869616400993249e33de2afc7fafa39e9a3123b5821bbd3d20755e38b",
    "transactionHash": "0x81577f3c6c79ab9dd3a6d65a9794671842b8afc77aa12fd5878926ec4563431e",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1644019",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "Ciprian",
      "Alin",
      "Gabriel",
      "Marius"
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "c6eea50c7305d55c8834226a38f233bb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"proposalNames\",\"type\":\"string[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chairman\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"delegateVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposalNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinners\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"proposalName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"proposal\",\"type\":\"uint32\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winnerNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winningProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"AlinCiprian\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Voting system with delegation feature\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"You can use this contract to implement a decentralized voting system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ballot.sol\":\"Ballot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ballot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Voting system with delegation feature\\n/// @author AlinCiprian\\n/// @notice You can use this contract to implement a decentralized voting system\\n\\ncontract Ballot {\\n    struct Voter {\\n        uint32 weight; // weight is acumulated by delegation\\n        bool voted; // if voted is true, the person have already voted\\n        address delegate; //the address delegated by the voter\\n        uint32 vote; // the index of the preffered proposal\\n    }\\n\\n    struct Proposal {\\n        string proposalName;\\n        uint voteCount;\\n    }\\n\\n    uint[] public winningProposals; //This array contains the indexes of the winner/winners\\n    string[] public winnerNames; // An array that contains the winner/winners names\\n\\n    mapping(address => Voter) voters;\\n    Proposal[] public proposals; // An array that contains the proposals which will be voted\\n\\n    address public chairman;\\n\\n    constructor(string[] memory proposalNames) {\\n        chairman = msg.sender;\\n        voters[chairman].weight = 1;\\n        for (uint i = 0; i < proposalNames.length; i++) {\\n            proposals.push(\\n                Proposal({proposalName: proposalNames[i], voteCount: 0})\\n            );\\n        }\\n    }\\n\\n    function giveRightToVote(address _voter) external {\\n        require(msg.sender == chairman, \\\"Only chairman can give right to vote\\\");\\n        require(!voters[_voter].voted, \\\"Already voted\\\");\\n        require(voters[_voter].weight == 0);\\n        voters[_voter].weight = 1;\\n    }\\n\\n    function delegateVote(address _to) external {\\n        Voter storage sender = voters[msg.sender];\\n        require(!sender.voted, \\\"Can not delegate if you have already voted\\\");\\n        require(sender.weight != 0, \\\"You have no right to vote\\\");\\n        require(_to != msg.sender, \\\"Self-delegation is not allowed\\\");\\n        Voter storage delegated = voters[_to];\\n        require(\\n            delegated.weight != 0,\\n            \\\"The delegated address does not have the right to vote\\\"\\n        );\\n\\n        sender.voted = true;\\n        sender.delegate = _to;\\n\\n        if (delegated.voted) {\\n            proposals[delegated.vote].voteCount += sender.weight;\\n        } else {\\n            delegated.weight += sender.weight;\\n        }\\n    }\\n\\n    function vote(uint32 proposal) external {\\n        Voter storage sender = voters[msg.sender];\\n        require(sender.weight != 0, \\\"You do not have the right to vote\\\");\\n        require(!sender.voted, \\\"Already voted\\\");\\n\\n        sender.voted = true;\\n        sender.vote = proposal;\\n\\n        proposals[proposal].voteCount += sender.weight;\\n    }\\n\\n    function countVotes() external {\\n        require(\\n            msg.sender == chairman,\\n            \\\"Only the chairman can trigger this function\\\"\\n        );\\n        uint winningCount = 0;\\n        // Find the highest number of votes and store it in winningCount\\n        for (uint p = 0; p < proposals.length; p++) {\\n            if (proposals[p].voteCount > winningCount) {\\n                winningCount = proposals[p].voteCount;\\n            }\\n        }\\n        // Store in winningProposals the indexes of the  proposals  that have a voteCount equal to winningCount\\n        // This way we can keep track if we have more proposals with the same number of votes\\n        for (uint i = 0; i < proposals.length; i++) {\\n            if (proposals[i].voteCount == winningCount) {\\n                winningProposals.push(i);\\n            }\\n        }\\n        // Based on the indexes above, we store in winnerNames the corespondent names;\\n        for (uint index = 0; index < winningProposals.length; index++) {\\n            uint winnerIndex = winningProposals[index];\\n            winnerNames.push(proposals[winnerIndex].proposalName);\\n        }\\n    }\\n\\n    function getWinners() public view returns (string[] memory) {\\n        return winnerNames;\\n    }\\n\\n    function getProposalNames() public view returns (string[] memory) {\\n        uint itemCount = proposals.length;\\n        string[] memory proposalNames = new string[](itemCount);\\n\\n        for (uint i = 0; i < proposals.length; i++) {\\n            proposalNames[i] = proposals[i].proposalName;\\n        }\\n        return proposalNames;\\n    }\\n}\\n\",\"keccak256\":\"0x69743c0af3cbd64cf61feeb788ff57f1b14b7f2f8511705a3782f176e99fbd13\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001fcb38038062001fcb8339818101604052810190620000379190620004f9565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160026000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff16021790555060005b8151811015620001a857600360405180604001604052808484815181106200012c576200012b6200054a565b5b6020026020010151815260200160008152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908051906020019062000185929190620001b0565b5060208201518160010155505080806200019f90620005b2565b915050620000ff565b505062000665565b828054620001be906200062f565b90600052602060002090601f016020900481019282620001e257600085556200022e565b82601f10620001fd57805160ff19168380011785556200022e565b828001600101855582156200022e579182015b828111156200022d57825182559160200191906001019062000210565b5b5090506200023d919062000241565b5090565b5b808211156200025c57600081600090555060010162000242565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002c48262000279565b810181811067ffffffffffffffff82111715620002e657620002e56200028a565b5b80604052505050565b6000620002fb62000260565b9050620003098282620002b9565b919050565b600067ffffffffffffffff8211156200032c576200032b6200028a565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156200036557620003646200028a565b5b620003708262000279565b9050602081019050919050565b60005b838110156200039d57808201518184015260208101905062000380565b83811115620003ad576000848401525b50505050565b6000620003ca620003c48462000347565b620002ef565b905082815260208101848484011115620003e957620003e862000342565b5b620003f68482856200037d565b509392505050565b600082601f83011262000416576200041562000274565b5b815162000428848260208601620003b3565b91505092915050565b60006200044862000442846200030e565b620002ef565b905080838252602082019050602084028301858111156200046e576200046d6200033d565b5b835b81811015620004bc57805167ffffffffffffffff81111562000497576200049662000274565b5b808601620004a68982620003fe565b8552602085019450505060208101905062000470565b5050509392505050565b600082601f830112620004de57620004dd62000274565b5b8151620004f084826020860162000431565b91505092915050565b6000602082840312156200051257620005116200026a565b5b600082015167ffffffffffffffff8111156200053357620005326200026f565b5b6200054184828501620004c6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000620005bf82620005a8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620005f557620005f462000579565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200064857607f821691505b602082108114156200065f576200065e62000600565b5b50919050565b61195680620006756000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639094c763116100665780639094c763146101705780639e7b8d611461018c578063b31e1d4d146101a8578063b647990a146101c4578063df15c37e146101ce5761009e565b8063013cf08b146100a35780631561af50146100d45780636b5a051b14610104578063806d7bd71461012257806387f7b97514610152575b600080fd5b6100bd60048036038101906100b89190610fad565b6101ec565b6040516100cb929190611082565b60405180910390f35b6100ee60048036038101906100e99190610fad565b6102a8565b6040516100fb91906110b2565b60405180910390f35b61010c610354565b60405161011991906111e0565b60405180910390f35b61013c60048036038101906101379190610fad565b6104aa565b6040516101499190611202565b60405180910390f35b61015a6104ce565b604051610167919061125e565b60405180910390f35b61018a600480360381019061018591906112b5565b6104f4565b005b6101a660048036038101906101a1919061130e565b610687565b005b6101c260048036038101906101bd919061130e565b610871565b005b6101cc610bbb565b005b6101d6610def565b6040516101e391906111e0565b60405180910390f35b600381815481106101fc57600080fd5b906000526020600020906002020160009150905080600001805461021f9061136a565b80601f016020809104026020016040519081016040528092919081815260200182805461024b9061136a565b80156102985780601f1061026d57610100808354040283529160200191610298565b820191906000526020600020905b81548152906001019060200180831161027b57829003601f168201915b5050505050908060010154905082565b600181815481106102b857600080fd5b9060005260206000200160009150905080546102d39061136a565b80601f01602080910402602001604051908101604052809291908181526020018280546102ff9061136a565b801561034c5780601f106103215761010080835404028352916020019161034c565b820191906000526020600020905b81548152906001019060200180831161032f57829003601f168201915b505050505081565b60606000600380549050905060008167ffffffffffffffff81111561037c5761037b61139c565b5b6040519080825280602002602001820160405280156103af57816020015b606081526020019060019003908161039a5790505b50905060005b6003805490508110156104a157600381815481106103d6576103d56113cb565b5b906000526020600020906002020160000180546103f29061136a565b80601f016020809104026020016040519081016040528092919081815260200182805461041e9061136a565b801561046b5780601f106104405761010080835404028352916020019161046b565b820191906000526020600020905b81548152906001019060200180831161044e57829003601f168201915b5050505050828281518110610483576104826113cb565b5b6020026020010181905250808061049990611429565b9150506103b5565b50809250505090565b600081815481106104ba57600080fd5b906000526020600020016000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160009054906101000a900463ffffffff1663ffffffff161415610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c906114e4565b60405180910390fd5b8060000160049054906101000a900460ff16156105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de90611550565b60405180910390fd5b60018160000160046101000a81548160ff021916908315150217905550818160000160196101000a81548163ffffffff021916908363ffffffff1602179055508060000160009054906101000a900463ffffffff1663ffffffff1660038363ffffffff168154811061065c5761065b6113cb565b5b9060005260206000209060020201600101600082825461067c9190611570565b925050819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90611638565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160049054906101000a900460ff16156107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90611550565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161461080c57600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff16021790555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160049054906101000a900460ff1615610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd906116ca565b60405180910390fd5b60008160000160009054906101000a900463ffffffff1663ffffffff161415610964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095b90611736565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca906117a2565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160009054906101000a900463ffffffff1663ffffffff161415610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b90611834565b60405180910390fd5b60018260000160046101000a81548160ff021916908315150217905550828260000160056101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060000160049054906101000a900460ff1615610b60578160000160009054906101000a900463ffffffff1663ffffffff1660038260000160199054906101000a900463ffffffff1663ffffffff1681548110610b3457610b336113cb565b5b90600052602060002090600202016001016000828254610b549190611570565b92505081905550610bb6565b8160000160009054906101000a900463ffffffff168160000160008282829054906101000a900463ffffffff16610b979190611854565b92506101000a81548163ffffffff021916908363ffffffff1602179055505b505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4290611900565b60405180910390fd5b6000805b600380549050811015610cc5578160038281548110610c7157610c706113cb565b5b9060005260206000209060020201600101541115610cb25760038181548110610c9d57610c9c6113cb565b5b90600052602060002090600202016001015491505b8080610cbd90611429565b915050610c4f565b5060005b600380549050811015610d40578160038281548110610ceb57610cea6113cb565b5b9060005260206000209060020201600101541415610d2d5760008190806001815401808255809150506001900390600052602060002001600090919091909150555b8080610d3890611429565b915050610cc9565b5060005b600080549050811015610deb576000808281548110610d6657610d656113cb565b5b90600052602060002001549050600160038281548110610d8957610d886113cb565b5b906000526020600020906002020160000190806001815401808255809150506001900390600052602060002001600090919091909150908054610dcb9061136a565b610dd6929190610ec8565b50508080610de390611429565b915050610d44565b5050565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610ebf578382906000526020600020018054610e329061136a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5e9061136a565b8015610eab5780601f10610e8057610100808354040283529160200191610eab565b820191906000526020600020905b815481529060010190602001808311610e8e57829003601f168201915b505050505081526020019060010190610e13565b50505050905090565b828054610ed49061136a565b90600052602060002090601f016020900481019282610ef65760008555610f44565b82601f10610f075780548555610f44565b82800160010185558215610f4457600052602060002091601f016020900482015b82811115610f43578254825591600101919060010190610f28565b5b509050610f519190610f55565b5090565b5b80821115610f6e576000816000905550600101610f56565b5090565b600080fd5b6000819050919050565b610f8a81610f77565b8114610f9557600080fd5b50565b600081359050610fa781610f81565b92915050565b600060208284031215610fc357610fc2610f72565b5b6000610fd184828501610f98565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611014578082015181840152602081019050610ff9565b83811115611023576000848401525b50505050565b6000601f19601f8301169050919050565b600061104582610fda565b61104f8185610fe5565b935061105f818560208601610ff6565b61106881611029565b840191505092915050565b61107c81610f77565b82525050565b6000604082019050818103600083015261109c818561103a565b90506110ab6020830184611073565b9392505050565b600060208201905081810360008301526110cc818461103a565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061111c82610fda565b6111268185611100565b9350611136818560208601610ff6565b61113f81611029565b840191505092915050565b60006111568383611111565b905092915050565b6000602082019050919050565b6000611176826110d4565b61118081856110df565b935083602082028501611192856110f0565b8060005b858110156111ce57848403895281516111af858261114a565b94506111ba8361115e565b925060208a01995050600181019050611196565b50829750879550505050505092915050565b600060208201905081810360008301526111fa818461116b565b905092915050565b60006020820190506112176000830184611073565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112488261121d565b9050919050565b6112588161123d565b82525050565b6000602082019050611273600083018461124f565b92915050565b600063ffffffff82169050919050565b61129281611279565b811461129d57600080fd5b50565b6000813590506112af81611289565b92915050565b6000602082840312156112cb576112ca610f72565b5b60006112d9848285016112a0565b91505092915050565b6112eb8161123d565b81146112f657600080fd5b50565b600081359050611308816112e2565b92915050565b60006020828403121561132457611323610f72565b5b6000611332848285016112f9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138257607f821691505b602082108114156113965761139561133b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061143482610f77565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611467576114666113fa565b5b600182019050919050565b7f596f7520646f206e6f7420686176652074686520726967687420746f20766f7460008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b60006114ce602183610fe5565b91506114d982611472565b604082019050919050565b600060208201905081810360008301526114fd816114c1565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b600061153a600d83610fe5565b915061154582611504565b602082019050919050565b600060208201905081810360008301526115698161152d565b9050919050565b600061157b82610f77565b915061158683610f77565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115bb576115ba6113fa565b5b828201905092915050565b7f4f6e6c792063686169726d616e2063616e206769766520726967687420746f2060008201527f766f746500000000000000000000000000000000000000000000000000000000602082015250565b6000611622602483610fe5565b915061162d826115c6565b604082019050919050565b6000602082019050818103600083015261165181611615565b9050919050565b7f43616e206e6f742064656c656761746520696620796f75206861766520616c7260008201527f6561647920766f74656400000000000000000000000000000000000000000000602082015250565b60006116b4602a83610fe5565b91506116bf82611658565b604082019050919050565b600060208201905081810360008301526116e3816116a7565b9050919050565b7f596f752068617665206e6f20726967687420746f20766f746500000000000000600082015250565b6000611720601983610fe5565b915061172b826116ea565b602082019050919050565b6000602082019050818103600083015261174f81611713565b9050919050565b7f53656c662d64656c65676174696f6e206973206e6f7420616c6c6f7765640000600082015250565b600061178c601e83610fe5565b915061179782611756565b602082019050919050565b600060208201905081810360008301526117bb8161177f565b9050919050565b7f5468652064656c656761746564206164647265737320646f6573206e6f74206860008201527f6176652074686520726967687420746f20766f74650000000000000000000000602082015250565b600061181e603583610fe5565b9150611829826117c2565b604082019050919050565b6000602082019050818103600083015261184d81611811565b9050919050565b600061185f82611279565b915061186a83611279565b92508263ffffffff03821115611883576118826113fa565b5b828201905092915050565b7f4f6e6c79207468652063686169726d616e2063616e207472696767657220746860008201527f69732066756e6374696f6e000000000000000000000000000000000000000000602082015250565b60006118ea602b83610fe5565b91506118f58261188e565b604082019050919050565b60006020820190508181036000830152611919816118dd565b905091905056fea2646970667358221220aaa9865c948c0e377d663d5be9c5dcde934c36a7fa5b240d9929431704d4d6d864736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80639094c763116100665780639094c763146101705780639e7b8d611461018c578063b31e1d4d146101a8578063b647990a146101c4578063df15c37e146101ce5761009e565b8063013cf08b146100a35780631561af50146100d45780636b5a051b14610104578063806d7bd71461012257806387f7b97514610152575b600080fd5b6100bd60048036038101906100b89190610fad565b6101ec565b6040516100cb929190611082565b60405180910390f35b6100ee60048036038101906100e99190610fad565b6102a8565b6040516100fb91906110b2565b60405180910390f35b61010c610354565b60405161011991906111e0565b60405180910390f35b61013c60048036038101906101379190610fad565b6104aa565b6040516101499190611202565b60405180910390f35b61015a6104ce565b604051610167919061125e565b60405180910390f35b61018a600480360381019061018591906112b5565b6104f4565b005b6101a660048036038101906101a1919061130e565b610687565b005b6101c260048036038101906101bd919061130e565b610871565b005b6101cc610bbb565b005b6101d6610def565b6040516101e391906111e0565b60405180910390f35b600381815481106101fc57600080fd5b906000526020600020906002020160009150905080600001805461021f9061136a565b80601f016020809104026020016040519081016040528092919081815260200182805461024b9061136a565b80156102985780601f1061026d57610100808354040283529160200191610298565b820191906000526020600020905b81548152906001019060200180831161027b57829003601f168201915b5050505050908060010154905082565b600181815481106102b857600080fd5b9060005260206000200160009150905080546102d39061136a565b80601f01602080910402602001604051908101604052809291908181526020018280546102ff9061136a565b801561034c5780601f106103215761010080835404028352916020019161034c565b820191906000526020600020905b81548152906001019060200180831161032f57829003601f168201915b505050505081565b60606000600380549050905060008167ffffffffffffffff81111561037c5761037b61139c565b5b6040519080825280602002602001820160405280156103af57816020015b606081526020019060019003908161039a5790505b50905060005b6003805490508110156104a157600381815481106103d6576103d56113cb565b5b906000526020600020906002020160000180546103f29061136a565b80601f016020809104026020016040519081016040528092919081815260200182805461041e9061136a565b801561046b5780601f106104405761010080835404028352916020019161046b565b820191906000526020600020905b81548152906001019060200180831161044e57829003601f168201915b5050505050828281518110610483576104826113cb565b5b6020026020010181905250808061049990611429565b9150506103b5565b50809250505090565b600081815481106104ba57600080fd5b906000526020600020016000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160009054906101000a900463ffffffff1663ffffffff161415610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c906114e4565b60405180910390fd5b8060000160049054906101000a900460ff16156105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de90611550565b60405180910390fd5b60018160000160046101000a81548160ff021916908315150217905550818160000160196101000a81548163ffffffff021916908363ffffffff1602179055508060000160009054906101000a900463ffffffff1663ffffffff1660038363ffffffff168154811061065c5761065b6113cb565b5b9060005260206000209060020201600101600082825461067c9190611570565b925050819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90611638565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160049054906101000a900460ff16156107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90611550565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161461080c57600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff16021790555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160049054906101000a900460ff1615610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd906116ca565b60405180910390fd5b60008160000160009054906101000a900463ffffffff1663ffffffff161415610964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095b90611736565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca906117a2565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160009054906101000a900463ffffffff1663ffffffff161415610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b90611834565b60405180910390fd5b60018260000160046101000a81548160ff021916908315150217905550828260000160056101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060000160049054906101000a900460ff1615610b60578160000160009054906101000a900463ffffffff1663ffffffff1660038260000160199054906101000a900463ffffffff1663ffffffff1681548110610b3457610b336113cb565b5b90600052602060002090600202016001016000828254610b549190611570565b92505081905550610bb6565b8160000160009054906101000a900463ffffffff168160000160008282829054906101000a900463ffffffff16610b979190611854565b92506101000a81548163ffffffff021916908363ffffffff1602179055505b505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4290611900565b60405180910390fd5b6000805b600380549050811015610cc5578160038281548110610c7157610c706113cb565b5b9060005260206000209060020201600101541115610cb25760038181548110610c9d57610c9c6113cb565b5b90600052602060002090600202016001015491505b8080610cbd90611429565b915050610c4f565b5060005b600380549050811015610d40578160038281548110610ceb57610cea6113cb565b5b9060005260206000209060020201600101541415610d2d5760008190806001815401808255809150506001900390600052602060002001600090919091909150555b8080610d3890611429565b915050610cc9565b5060005b600080549050811015610deb576000808281548110610d6657610d656113cb565b5b90600052602060002001549050600160038281548110610d8957610d886113cb565b5b906000526020600020906002020160000190806001815401808255809150506001900390600052602060002001600090919091909150908054610dcb9061136a565b610dd6929190610ec8565b50508080610de390611429565b915050610d44565b5050565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610ebf578382906000526020600020018054610e329061136a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5e9061136a565b8015610eab5780601f10610e8057610100808354040283529160200191610eab565b820191906000526020600020905b815481529060010190602001808311610e8e57829003601f168201915b505050505081526020019060010190610e13565b50505050905090565b828054610ed49061136a565b90600052602060002090601f016020900481019282610ef65760008555610f44565b82601f10610f075780548555610f44565b82800160010185558215610f4457600052602060002091601f016020900482015b82811115610f43578254825591600101919060010190610f28565b5b509050610f519190610f55565b5090565b5b80821115610f6e576000816000905550600101610f56565b5090565b600080fd5b6000819050919050565b610f8a81610f77565b8114610f9557600080fd5b50565b600081359050610fa781610f81565b92915050565b600060208284031215610fc357610fc2610f72565b5b6000610fd184828501610f98565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611014578082015181840152602081019050610ff9565b83811115611023576000848401525b50505050565b6000601f19601f8301169050919050565b600061104582610fda565b61104f8185610fe5565b935061105f818560208601610ff6565b61106881611029565b840191505092915050565b61107c81610f77565b82525050565b6000604082019050818103600083015261109c818561103a565b90506110ab6020830184611073565b9392505050565b600060208201905081810360008301526110cc818461103a565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061111c82610fda565b6111268185611100565b9350611136818560208601610ff6565b61113f81611029565b840191505092915050565b60006111568383611111565b905092915050565b6000602082019050919050565b6000611176826110d4565b61118081856110df565b935083602082028501611192856110f0565b8060005b858110156111ce57848403895281516111af858261114a565b94506111ba8361115e565b925060208a01995050600181019050611196565b50829750879550505050505092915050565b600060208201905081810360008301526111fa818461116b565b905092915050565b60006020820190506112176000830184611073565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112488261121d565b9050919050565b6112588161123d565b82525050565b6000602082019050611273600083018461124f565b92915050565b600063ffffffff82169050919050565b61129281611279565b811461129d57600080fd5b50565b6000813590506112af81611289565b92915050565b6000602082840312156112cb576112ca610f72565b5b60006112d9848285016112a0565b91505092915050565b6112eb8161123d565b81146112f657600080fd5b50565b600081359050611308816112e2565b92915050565b60006020828403121561132457611323610f72565b5b6000611332848285016112f9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138257607f821691505b602082108114156113965761139561133b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061143482610f77565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611467576114666113fa565b5b600182019050919050565b7f596f7520646f206e6f7420686176652074686520726967687420746f20766f7460008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b60006114ce602183610fe5565b91506114d982611472565b604082019050919050565b600060208201905081810360008301526114fd816114c1565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b600061153a600d83610fe5565b915061154582611504565b602082019050919050565b600060208201905081810360008301526115698161152d565b9050919050565b600061157b82610f77565b915061158683610f77565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115bb576115ba6113fa565b5b828201905092915050565b7f4f6e6c792063686169726d616e2063616e206769766520726967687420746f2060008201527f766f746500000000000000000000000000000000000000000000000000000000602082015250565b6000611622602483610fe5565b915061162d826115c6565b604082019050919050565b6000602082019050818103600083015261165181611615565b9050919050565b7f43616e206e6f742064656c656761746520696620796f75206861766520616c7260008201527f6561647920766f74656400000000000000000000000000000000000000000000602082015250565b60006116b4602a83610fe5565b91506116bf82611658565b604082019050919050565b600060208201905081810360008301526116e3816116a7565b9050919050565b7f596f752068617665206e6f20726967687420746f20766f746500000000000000600082015250565b6000611720601983610fe5565b915061172b826116ea565b602082019050919050565b6000602082019050818103600083015261174f81611713565b9050919050565b7f53656c662d64656c65676174696f6e206973206e6f7420616c6c6f7765640000600082015250565b600061178c601e83610fe5565b915061179782611756565b602082019050919050565b600060208201905081810360008301526117bb8161177f565b9050919050565b7f5468652064656c656761746564206164647265737320646f6573206e6f74206860008201527f6176652074686520726967687420746f20766f74650000000000000000000000602082015250565b600061181e603583610fe5565b9150611829826117c2565b604082019050919050565b6000602082019050818103600083015261184d81611811565b9050919050565b600061185f82611279565b915061186a83611279565b92508263ffffffff03821115611883576118826113fa565b5b828201905092915050565b7f4f6e6c79207468652063686169726d616e2063616e207472696767657220746860008201527f69732066756e6374696f6e000000000000000000000000000000000000000000602082015250565b60006118ea602b83610fe5565b91506118f58261188e565b604082019050919050565b60006020820190508181036000830152611919816118dd565b905091905056fea2646970667358221220aaa9865c948c0e377d663d5be9c5dcde934c36a7fa5b240d9929431704d4d6d864736f6c63430008090033",
  "devdoc": {
    "author": "AlinCiprian",
    "kind": "dev",
    "methods": {},
    "title": "Voting system with delegation feature",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "You can use this contract to implement a decentralized voting system",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 19,
        "contract": "contracts/Ballot.sol:Ballot",
        "label": "winningProposals",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 22,
        "contract": "contracts/Ballot.sol:Ballot",
        "label": "winnerNames",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 27,
        "contract": "contracts/Ballot.sol:Ballot",
        "label": "voters",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Voter)11_storage)"
      },
      {
        "astId": 31,
        "contract": "contracts/Ballot.sol:Ballot",
        "label": "proposals",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(Proposal)16_storage)dyn_storage"
      },
      {
        "astId": 33,
        "contract": "contracts/Ballot.sol:Ballot",
        "label": "chairman",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Proposal)16_storage)dyn_storage": {
        "base": "t_struct(Proposal)16_storage",
        "encoding": "dynamic_array",
        "label": "struct Ballot.Proposal[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Voter)11_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Ballot.Voter)",
        "numberOfBytes": "32",
        "value": "t_struct(Voter)11_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)16_storage": {
        "encoding": "inplace",
        "label": "struct Ballot.Proposal",
        "members": [
          {
            "astId": 13,
            "contract": "contracts/Ballot.sol:Ballot",
            "label": "proposalName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 15,
            "contract": "contracts/Ballot.sol:Ballot",
            "label": "voteCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Voter)11_storage": {
        "encoding": "inplace",
        "label": "struct Ballot.Voter",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Ballot.sol:Ballot",
            "label": "weight",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 6,
            "contract": "contracts/Ballot.sol:Ballot",
            "label": "voted",
            "offset": 4,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 8,
            "contract": "contracts/Ballot.sol:Ballot",
            "label": "delegate",
            "offset": 5,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10,
            "contract": "contracts/Ballot.sol:Ballot",
            "label": "vote",
            "offset": 25,
            "slot": "0",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}